{{php if ( !$user->isCurrentRole('Admin'))die('Access Denied'); }}
{{template header.htm}}

<div class="container-fluid p-4">
    <h2 class="mb-4">{{t('Dashboard')}}</h2>
    
    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">{{t('CPU Usage')}}</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800" id="cpuUsage">0%</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-microchip fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">{{t('Memory Usage')}}</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800" id="memoryUsage">0 MB</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-memory fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- System Resources Chart -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">{{t('System Resources')}}</h6>
                </div>
                <div class="card-body">
                    <div class="chart-area" style="height: 300px; position: relative; width: 100%;">
                        <canvas id="resourcesChart" style="max-width: 100%;"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
// Инициализация графика
const ctx = document.getElementById('resourcesChart').getContext('2d');
const chart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: [],
        datasets: [
            {
                label: '{{t("Memory Usage")}} (MB)',
                data: [],
                borderColor: 'blue',
                fill: false,
                yAxisID: 'y1',
                tension: 0.2
            },
            {
                label: '{{t("CPU Usage")}} (%)',
                data: [],
                borderColor: 'green',
                fill: false,
                yAxisID: 'y2',
                tension: 0.2
            }
        ]
    },
    options: {
        responsive: true,
        maintainAspectRatio: false,
        animation: true,
        plugins: {
            legend: {
                display: false
            }
        },
        scales: {
            x: {
                display: true,
                title: {
                    display: false,
                    text: 'Time'
                },
                grid: {
                    color: 'rgba(200, 200, 200, 0.1)'
                }
            },
            y1: {
                title: {
                    display: true,
                    text: '{{t("Memory Usage")}} (MB)',
                    color: 'blue'
                },
                beginAtZero: true,
                ticks: {
                    color: 'blue'
                },
                grid: {
                    color: 'rgba(0, 0, 255, 0.2)'
                },
                position: 'left'
            },
            y2: {
                title: {
                    display: true,
                    text: '{{t("CPU Usage")}} (%)',
                    color: 'green'
                },
                beginAtZero: true,
                ticks: {
                    color: 'green'
                },
                grid: {
                    color: 'rgba(0, 255, 0, 0.2)'
                },
                position: 'right'
            }
        }
    }
});

var timeCounter = 0;
var maxPoints = 60;
var isRequestPending = false;
var abortController = null;

function updateStats() {
    if (isRequestPending) return;

    isRequestPending = true;
    abortController = new AbortController();

    const timeoutId = setTimeout(() => {
        abortController.abort();
        isRequestPending = false;
        updateStats();
    }, 5000);

    const startTime = Date.now();

    fetch('stats.php', { signal: abortController.signal })
        .then(response => response.json())
        .then(data => {
            // Обновляем карточки
            document.getElementById('cpuUsage').textContent = data.cpu + '%';
            document.getElementById('memoryUsage').textContent = data.used_memory + ' MB';

            // Обновляем график
            if (chart.data.labels.length >= maxPoints) {
                chart.data.labels.shift();
                chart.data.datasets.forEach(dataset => dataset.data.shift());
            }
            chart.data.labels.push(timeCounter);
            chart.data.datasets[0].data.push(data.used_memory);
            chart.data.datasets[1].data.push(data.cpu);
            chart.update('active');

            timeCounter = (timeCounter + 1) % maxPoints;
        })
        .catch(error => {
            if (error.name === 'AbortError') {
                console.log('Запрос был отменен из-за таймаута');
            } else {
                console.error('Ошибка загрузки данных:', error);
            }
        })
        .finally(() => {
            clearTimeout(timeoutId);
            isRequestPending = false;
            const requestDuration = Date.now() - startTime;
            const delay = requestDuration < 1000 ? 1000 - requestDuration : 0;
            setTimeout(updateStats, delay);
        });
}

// Запускаем обновление данных
updateStats();

// Обработчик для изменения размера окна
window.addEventListener('resize', function() {
    chart.resize();
});
</script>

{{template footer.htm}}