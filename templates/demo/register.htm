{{template includes/header.htm}}

<h1 class="display-4 text-center mb-4">{{t('Registration')}}</h1>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <form id="registerForm" action="index.php" method="POST" novalidate>
                <div class="mb-3">
                    <label for="email" class="form-label">{{t('Email')}}</label>
                    <input type="email" class="form-control" id="email" name="email" required>
                    <div id="emailError" class="alert alert-danger mt-2" style="display:none;" role="alert"></div>
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">{{t('Password')}}</label>
                    <input type="password" class="form-control" id="password" name="password" required>
                    <div id="passwordError" class="alert alert-danger mt-2" style="display:none;" role="alert"></div>
                </div>
                <div class="mb-3">
                    <label for="name" class="form-label">{{t('Name')}}</label>
                    <input type="text" class="form-control" id="name" name="name" required>
                    <div id="nameError" class="alert alert-danger mt-2" style="display:none;" role="alert"></div>
                </div>
                <div class="mb-3">
                    <label for="role" class="form-label">{{t('Role')}}</label>
                    <select class="form-control" id="role" name="role" required>
                        <option value="user">{{t('User')}}</option>
                        <option value="admin">{{t('Admin')}}</option>
                    </select>
                    <div id="roleError" class="alert alert-danger mt-2" style="display:none;" role="alert"></div>
                </div>
                <button type="submit" class="btn btn-primary">{{t('Register')}}</button>
            </form>
        </div>
    </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById('registerForm');

    // Добавляем обработчики для каждого поля
    form.querySelector('#email').addEventListener('input', validateEmail);
    form.querySelector('#password').addEventListener('input', validatePassword);
    form.querySelector('#name').addEventListener('input', validateName);
    form.querySelector('#role').addEventListener('change', validateRole);

    // Добавляем обработчик для отправки формы
    form.addEventListener('submit', handleRegister);
});

function validateEmail() {
    const email = document.getElementById('email');
    const emailError = document.getElementById('emailError');
    emailError.style.display = 'none'; // Скрываем ошибку, если поле заполнено

    if (!email.value) {
        emailError.textContent = '{{t('Please fill in the Email field.')}}';
        emailError.style.display = 'block';
    } else if (!/\S+@\S+\.\S+/.test(email.value)) {
        emailError.textContent = '{{t('Please enter a valid Email.')}}';
        emailError.style.display = 'block';
    }
}

function validatePassword() {
    const password = document.getElementById('password');
    const passwordError = document.getElementById('passwordError');
    passwordError.style.display = 'none';

    if (!password.value) {
        passwordError.textContent = '{{t('Please fill in the Password field.')}}';
        passwordError.style.display = 'block';
    }
}

function validateName() {
    const name = document.getElementById('name');
    const nameError = document.getElementById('nameError');
    nameError.style.display = 'none';

    if (!name.value) {
        nameError.textContent = '{{t('Please fill in the Name field.')}}';
        nameError.style.display = 'block';
    }
}

function validateRole() {
    const role = document.getElementById('role');
    const roleError = document.getElementById('roleError');
    roleError.style.display = 'none';

    if (!role.value) {
        roleError.textContent = '{{t('Please select a Role.')}}';
        roleError.style.display = 'block';
    }
}

function handleRegister(e) {
    e.preventDefault(); // Останавливаем стандартное поведение формы

    const form = document.getElementById('registerForm');
    const formData = new FormData(form);
    formData.append('action', 'register_user');
    formData.append('autoLogin', 'true'); // Добавляем параметр для автоматического логина

    // Скрываем все ошибки перед отправкой
    document.getElementById('emailError').style.display = 'none';
    document.getElementById('passwordError').style.display = 'none';
    document.getElementById('nameError').style.display = 'none';
    document.getElementById('roleError').style.display = 'none';

    // Проверка полей перед отправкой
    validateEmail();
    validatePassword();
    validateName();
    validateRole();

    const emailErrorVisible = document.getElementById('emailError').style.display === 'block';
    const passwordErrorVisible = document.getElementById('passwordError').style.display === 'block';
    const nameErrorVisible = document.getElementById('nameError').style.display === 'block';
    const roleErrorVisible = document.getElementById('roleError').style.display === 'block';

    if (emailErrorVisible || passwordErrorVisible || nameErrorVisible || roleErrorVisible) {
        return; // Если есть ошибки, не отправляем форму
    }

    // Отправляем запрос через fetch
    fetch('ajax.php', {
        method: 'POST',
        headers: {
            'X-CSRF-TOKEN': '<?= $_SESSION['csrf_token'] ?>' // Добавляем CSRF-токен
        },
        body: formData
    })
    .then(response => response.json()) // Получаем ответ в формате JSON
    .then(data => {
        if (data.success) {
            // Если регистрация прошла успешно
            alert(data.message || "{{t('Registration successful! You are now logged in.')}}");
            window.location.href = '?page=profile.htm'; // Перенаправление на профиль
        } else {
            // Если есть ошибки, отображаем их
            if (data.errors) {
                // Ошибка по email
                if (data.errors.email) {
                    const emailError = document.getElementById('emailError');
                    emailError.textContent = data.errors.email;
                    emailError.style.display = 'block';
                }

                // Ошибка по паролю
                if (data.errors.password) {
                    const passwordError = document.getElementById('passwordError');
                    passwordError.textContent = data.errors.password;
                    passwordError.style.display = 'block';
                }

                // Ошибка по имени
                if (data.errors.name) {
                    const nameError = document.getElementById('nameError');
                    nameError.textContent = data.errors.name;
                    nameError.style.display = 'block';
                }

                // Ошибка по роли
                if (data.errors.role) {
                    const roleError = document.getElementById('roleError');
                    roleError.textContent = data.errors.role;
                    roleError.style.display = 'block';
                }
            } else {
                // Если нет конкретных ошибок, но регистрация не удалась
                alert(data.message || "{{t('Registration error')}}");
            }
        }
    })
    .catch(error => {
        console.error('{{t('Request error:')}}', error); // Логирование ошибок
        alert("{{t('Connection error')}}"); // Уведомление пользователя
    });
}

</script>

{{template includes/footer.htm}}