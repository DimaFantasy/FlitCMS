{{template includes/header.htm}}

<script src="https://cdn.jsdelivr.net/npm/chart.js@3"></script>

<?php
// –û—Ç–∫–ª—é—á–∞–µ–º –≤—ã–≤–æ–¥ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π (warnings)
error_reporting(E_ALL & ~E_WARNING);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞
$protocol = (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off') ? 'HTTPS' : 'HTTP';

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è HTTPS)
$sslInfo = null;
$sslError = null; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏ SSL

if ($protocol === 'HTTPS') {
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    $context = stream_context_create([
        "ssl" => [
            "capture_peer_cert" => true,
            "verify_peer" => false,       // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
            "verify_peer_name" => false,  // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∏–º–µ–Ω–∏ —Ö–æ—Å—Ç–∞
        ],
    ]);

    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É
    $client = @stream_socket_client("ssl://" . $_SERVER['HTTP_HOST'] . ":443", $errno, $errstr, 30, STREAM_CLIENT_CONNECT, $context);

    if ($client) {
        // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (–≤–∫–ª—é—á–∞—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç)
        $cert = stream_context_get_params($client);
        if (!empty($cert['options']['ssl']['peer_certificate'])) {
            // –ü–∞—Ä—Å–∏–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
            $certDetails = openssl_x509_parse($cert['options']['ssl']['peer_certificate']);
            if ($certDetails) {
                $sslInfo = [
                    'validFrom' => date('Y-m-d H:i:s', $certDetails['validFrom_time_t']), // –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏
                    'validTo' => date('Y-m-d H:i:s', $certDetails['validTo_time_t']),     // –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è
                    'issuer' => $certDetails['issuer']['O'] ?? 'Unknown',                // –ò–∑–¥–∞—Ç–µ–ª—å
                ];

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å—Ç—ë–∫ –ª–∏ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
                $currentTime = time();
                if ($currentTime > $certDetails['validTo_time_t']) {
                    $sslError = 'üî¥ ' . t('SSL certificate has expired.');
                }
            }
        }
        fclose($client);
    } else {
        // –ï—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—à–∏–±–∫—É
        if (strpos($errstr, 'certificate verify failed') !== false) {
            $sslError = 'üî¥ ' . t('Error: SSL certificate has expired or is invalid.');
        } else {
            $sslError = 'üî¥ ' . t('Connection error: ') . $errstr . '(' . t('error code:') . $errno . ')';
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π $envInfo
$envInfo = [
    'PHP' => phpversion(),
    '–†–∞—Å—à–∏—Ä–µ–Ω–∏—è PHP' => implode(', ', get_loaded_extensions()),
    '–í–µ–±-—Å–µ—Ä–≤–µ—Ä' => $_SERVER['SERVER_SOFTWARE']
];

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–æ–¥—É–ª–µ–π Apache (–µ—Å–ª–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä ‚Äî Apache)
$apacheModules = [];
if (strpos($_SERVER['SERVER_SOFTWARE'], 'Apache') !== false && function_exists('apache_get_modules')) {
    $apacheModules = apache_get_modules();
}
?>


<h1 class="display-4 text-center mb-4 p-1">{{t('About project')}}</h1>

<div class="row border p-4 shadow-sm">
    <div class="col-md-12 p-1">
        <h2 class="fw-bold">{{t('Our mission')}}</h2>
        <h3 class="text-muted">{{t('Create a simple and effective tool for rapid development')}}</h3>
    </div>
</div>

<div class="row">
    <div class="col-md-12 p-1">
        <h2 class="fw-bold">{{t('CPU and RAM Monitoring')}}</h2>
        <div class="border rounded p-2 mb-3">
            <!-- –ì—Ä–∞—Ñ–∏–∫ -->
            <canvas id="resourceChartCpuRam" style="width: 100%;  height: 240px; "></canvas>
        </div>
    </div>
</div>

<!-- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ä–∞–∑–¥–µ–ª "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ä–µ–¥–µ" -->
<div class="col-md-12 p-1">
    <h2 class="fw-bold">{{t('Environment Information')}}</h2>
    <div class="border rounded p-2 mb-3">
        <!-- –ü—Ä–æ—Ç–æ–∫–æ–ª -->
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Protocol')}}</span>
            <span class="col-8 border-start ps-2"><?php echo $protocol; ?></span>
        </div>

        <!-- SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç -->
        <?php if ($sslInfo): ?>
            <div class="d-flex justify-content-between border-bottom py-2">
                <span class="col-4 pe-2">{{t('SSL Certificate')}}</span>
                <span class="col-8 border-start ps-2 text-left">
                    {{t('Valid from')}}: <?php echo $sslInfo['validFrom']; ?><br>
                    {{t('Valid until')}}: <?php echo $sslInfo['validTo']; ?><br>
                    {{t('Issuer')}}: <?php echo $sslInfo['issuer']; ?><br>
                    <?php if ($sslError): ?>
                        <span class="text-danger">{{t($sslError)}}</span>
                    <?php endif; ?>
                </span>
            </div>
        <?php elseif ($sslError): ?>
            <div class="d-flex justify-content-between border-bottom py-2">
                <span class="col-4 pe-2">{{t('SSL Certificate')}}</span>
                <span class="col-8 border-start ps-2 text-danger">{{t($sslError)}}</span>
            </div>
        <?php else: ?>
            <div class="d-flex justify-content-between border-bottom py-2">
                <span class="col-4 pe-2">{{t('SSL Certificate')}}</span>
                <span class="col-8 border-start ps-2 text-danger">üî¥ {{t('Certificate is missing or unavailable')}}</span>
            </div>
        <?php endif; ?>

        <!-- –í–µ—Ä—Å–∏—è OpenSSL -->
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('OpenSSL Version')}}</span>
            <span class="col-8 border-start ps-2"><?php echo OPENSSL_VERSION_TEXT; ?></span>
        </div>

        <!-- –í–µ–±-—Å–µ—Ä–≤–µ—Ä -->
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Web Server')}}</span>
            <span class="col-8 border-start ps-2"><?php echo $_SERVER['SERVER_SOFTWARE']; ?></span>
        </div>

        <!-- –ú–æ–¥—É–ª–∏ Apache -->
        <?php if (!empty($apacheModules)): ?>
            <div class="d-flex justify-content-between border-bottom py-2">
                <span class="col-4 pe-2">{{t('Apache Modules')}}</span>
                <span class="col-8 border-start ps-2"><?php echo implode(', ', $apacheModules); ?></span>
            </div>
        <?php elseif (strpos($_SERVER['SERVER_SOFTWARE'], 'Apache') !== false): ?>
            <div class="d-flex justify-content-between border-bottom py-2">
                <span class="col-4 pe-2">{{t('Apache Modules')}}</span>
                <span class="col-8 border-start ps-2 text-warning">‚ö†Ô∏è {{t('Apache module information is unavailable (PHP is not running as an Apache module).')}}</span>
            </div>
        <?php endif; ?>

        <!-- PHP -->
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('PHP')}}</span>
            <span class="col-8 border-start ps-2"><?php echo phpversion(); ?></span>
        </div>

        <!-- –†–∞—Å—à–∏—Ä–µ–Ω–∏—è PHP -->
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('PHP Extensions')}}</span>
            <span class="col-8 border-start ps-2"><?php echo implode(', ', get_loaded_extensions()); ?></span>
        </div>

        <!-- –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ -->
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Operating System')}}</span>
            <span class="col-8 border-start ps-2"><?php echo php_uname('s') . ' ' . php_uname('r'); ?></span>
        </div>

<!-- –õ–∏–º–∏—Ç –ø–∞–º—è—Ç–∏ PHP -->
<div class="d-flex justify-content-between border-bottom py-2">
    <span class="col-4 pe-2">{{t('PHP Memory Limit')}}</span>
    <span class="col-8 border-start ps-2"><?php echo ini_get('memory_limit'); ?></span>
</div>

<!-- –ò—Å–ø–æ–ª—å–∑—É–µ–º—É—é –ø–∞–º—è—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —Å–∫—Ä–∏–ø—Ç–æ–º PHP -->
<div class="d-flex justify-content-between border-bottom py-2">
    <span class="col-4 pe-2">{{t('Memory Used by PHP Script')}}</span>
    <span class="col-8 border-start ps-2"><?php echo round(memory_get_usage() / 1024 / 1024, 2) . ' MB'; ?></span>
</div>


<!-- –ü–∏–∫–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞ PHP -->
<div class="d-flex justify-content-between border-bottom py-2">
    <span class="col-4 pe-2">{{t('Peak Memory Usage by PHP Script')}}</span>
    <span class="col-8 border-start ps-2"><?php echo round(memory_get_peak_usage() / 1024 / 1024, 2) . ' MB'; ?></span>
</div>

        <!-- –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ -->
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('PHP Script Execution Time')}}</span>
            <span class="col-8 border-start ps-2"><?php echo round(microtime(true) - $_SERVER['REQUEST_TIME_FLOAT'], 4) . ' —Å–µ–∫'; ?></span>
        </div>

        <!-- –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ -->
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Free Disk Space')}}</span>
            <span class="col-8 border-start ps-2"><?php echo round(disk_free_space('/') / 1024 / 1024 / 1024, 2) . ' GB'; ?></span>
        </div>

        <!-- –û–±—â–µ–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ -->
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Total Disk Space')}}</span>
            <span class="col-8 border-start ps-2"><?php echo round(disk_total_space('/') / 1024 / 1024 / 1024, 2) . ' GB'; ?></span>
        </div>

        <!-- –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞ -->
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Server Uptime')}}</span>
            <span class="col-8 border-start ps-2">
                <?php
                if (function_exists('shell_exec')) {
                    // –ü–æ–ª—É—á–∞–µ–º –≤—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã uptime
                    $uptime = shell_exec('uptime');

                    if ($uptime) {
                        $uptime = trim($uptime);

                        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É Linux, macOS –∏–ª–∏ FreeBSD
                        if (strpos($uptime, 'up') !== false) {
                            // –î–ª—è Linux, macOS, FreeBSD
                            $uptime_parts = explode(',', $uptime);

                            $time_up = trim($uptime_parts[0]); // –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞
                            $users = trim($uptime_parts[1]);   // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                            $load_avg = trim($uptime_parts[2]); // –°—Ä–µ–¥–Ω—è—è –Ω–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞

                            echo "<strong>".t('Uptime').":</strong> $time_up <br>";
                            echo "<strong>".t('Users').":</strong> $users <br>";
                            echo "<strong>".t('Load Average').":</strong> $load_avg";
                        } elseif (strpos($uptime, 'System Boot Time') !== false) {
                            // –î–ª—è Windows (—á–µ—Ä–µ–∑ systeminfo)
                            echo "<strong>".t('Last Boot Time') . ":</strong> $uptime";
                        } else {
                            echo t('Unable to recognize output format.');
                        }
                    } else {
                        echo t('Failed to retrieve server uptime data.');
                    }
                } else {
                    echo t('Command not available on server.');
                }
                ?>
            </span>
        </div>

        <!-- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å -->
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('User')}}</span>
            <span class="col-8 border-start ps-2"><?php echo get_current_user(); ?></span>
        </div>

        <!-- –ö–æ–¥–∏—Ä–æ–≤–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ -->
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Script Encoding')}}</span>
            <span class="col-8 border-start ps-2"><?php echo ini_get('default_charset'); ?></span>
        </div>

        <!-- Safe Mode -->
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Safe Mode')}}</span>
            <span class="col-8 border-start ps-2 text-<?php echo ini_get('safe_mode') ? 'danger' : 'success'; ?>">
                <?php echo ini_get('safe_mode') ? 'üü¢ '. t('Enabled') : 'üî¥ '.t('Disabled'); ?>
            </span>
        </div>

        <!-- Display Errors -->
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Display Errors')}}</span>
            <span class="col-8 border-start ps-2 text-<?php echo ini_get('display_errors') ? 'danger' : 'success'; ?>">
                <?php echo ini_get('display_errors') ? 'üü¢ '. t('Enabled') : 'üî¥ '.t('Disabled'); ?>
            </span>
        </div>


    </div>
</div>

<!-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ -->
<div class="col-md-12 p-1">
    <h2 class="fw-bold">{{t('Service Availability')}}</h2>
    <div class="border rounded p-2 mb-3">
        <?php
        function checkPort($host, $port, $serviceName) {
            $connection = @fsockopen($host, $port, $errno, $errstr, 0.3);
            $status = $connection ? 'üü¢ ' . t('Available') : 'üî¥ ' . t('Unavailable');
            $color = $connection ? 'text-success' : 'text-danger';
            if ($connection) fclose($connection);
            echo "<div class='d-flex justify-content-between border-bottom py-2'>"
                . "<span class='col-4 pe-2'>$serviceName ($port)</span>"
                . "<span class='col-8 text-left border-start ps-2 $color'>$status</span>"
                . "</div>";
        }

        checkPort('localhost', 3306, 'MySQL');

        if (class_exists('SQLite3')) {
            try {
                $db = new SQLite3(':memory:');
                echo "<div class='d-flex justify-content-between border-bottom py-2'>"
                    . "<span class='col-4 pe-2'>SQLite</span>"
                    . "<span class='col-8 text-left border-start ps-2 text-success'>"
                    . 'üü¢ '. t('Available'). '(version: '. SQLite3::version()['versionString'] . ')'
                    . "</span></div>";
            } catch (Exception $e) {
                echo "<div class='d-flex justify-content-between border-bottom py-2'>"
                    . "<span class='col-4 pe-2'>SQLite</span>"
                    . "<span class='col-8 text-left border-start ps-2 text-danger'>"
                    . 'üî¥ '. t('Connection error') . '(error: '. $e->getMessage() . ")"
                    . "</span></div>";
            }
        } else {
            echo "<div class='d-flex justify-content-between border-bottom py-2'>"
                . "<span class='col-4 pe-2'>SQLite</span>"
                . "<span class='col-8 text-left border-start ps-2 text-danger'>"
                . "üî¥ " . t('Unavailable')
                . "</span></div>";
        }

        checkPort('localhost', 22, 'SSH');
        checkPort('localhost', 21, 'FTP');
        checkPort('localhost', 443, 'HTTPS');
        ?>
    </div>
</div>

<!-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ CMS -->
<div class="col-md-12 p-1">
    <h2 class="fw-bold">{{t('CMS Settings')}}</h2>
    <div class="border rounded p-2 mb-3">
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('General Title')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['basePageTit']; ?></span>
        </div>
        <!-- –í–µ—Ä—Å–∏—è CMS -->
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('CMS Version')}}</span>
            <span class="col-8 border-start ps-2"><?php echo $cmsConfig['version']; ?></span>
        </div>

        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Language Files Folder')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['langDir']; ?></span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Missing Translations File')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['missingTranslationsFileName']; ?></span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Allowed Languages')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['validLanguages']; ?></span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Default Language')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['defaultLanguage']; ?></span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Language Cookie Name')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['langCookieName']; ?></span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Session Lifetime')}}</span>
            <span class="col-8 text-left border-start ps-2">
                <?php
                    $sessionTime = $cmsConfig['lifeTime'];
                    echo $sessionTime;
                    $sessionColor = $sessionTime == -1 ? 'text-success' : ($sessionTime == 0 ? 'text-danger' : 'text-warning');
                    if ($sessionTime == -1) {
                        echo 'üü¢ ' . t('Always');
                    } elseif ($sessionTime == 0) {
                        echo 'üî¥ ' . t('Until browser is closed');
                    } else {
                        echo $sessionTime . ', ' . t('hours');
                    }
                ?>
                <span class="<?php echo $sessionColor; ?>"></span>
            </span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Session Key')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['sessionKey']; ?></span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('User Cookie Name')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['userCookeName']; ?></span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Active Template Folder')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['tplDir']; ?></span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Template Compression')}}</span>
            <span class="col-8 text-left border-start ps-2 text-<?php echo $cmsConfig['tplCompress'] ? 'success' : 'danger'; ?>">
                <?php echo $cmsConfig['tplCompress'] ? 'üü¢ '. t('Enabled') : 'üî¥ '.t('Disabled'); ?>
            </span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Force Compilation')}}</span>
            <span class="col-8 text-left border-start ps-2 text-<?php echo $cmsConfig['tplForceCompile'] ? 'success' : 'danger'; ?>">
                <?php echo $cmsConfig['tplForceCompile'] ? 'üü¢ '. t('Enabled') : 'üî¥ '.t('Disabled'); ?>
            </span>
        </div>
    </div>

    <!-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã—Ö -->
    <div class="border rounded p-2 mb-3">
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Data Storage Type')}}</span>
            <span class="col-8 text-left border-start ps-2">
                <?php
                if ($cmsConfig['storage'] === 'mysql') {
                    echo 'üü¢ '. t('MySQL');
                } elseif ($cmsConfig['storage'] === 'json') {
                    echo 'üü¢ '. t('JSON');
                }
                ?>
            </span>
        </div>
    </div>

    <!-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ MySQL -->
    <div class="border rounded p-2 mb-3">
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">MySQL</span>
            <span class="col-8 text-left border-start ps-2 text-<?php echo $cmsConfig['storage'] === 'mysql' ? 'success' : 'secondary'; ?>"><?php echo $cmsConfig['storage'] === 'mysql' ? 'üü¢'. t('Active') : '‚ö™ '. t('Inactive'); ?></span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('MySQL Host')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['mysql']['host']; ?></span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Database Name')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['mysql']['dbname']; ?></span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('MySQL User')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['mysql']['user']; ?></span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('MySQL Password')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['mysql']['password']; ?></span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Charset')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['mysql']['charset']; ?></span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Users Table')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['mysql']['UsersTableName']; ?></span>
        </div>
    </div>

    <!-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ JSON -->
    <div class="border rounded p-2 mb-3">
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">JSON</span>
            <span class="col-8 text-left border-start ps-2 text-<?php echo $cmsConfig['storage'] === 'json' ? 'success' : 'secondary'; ?>"><?php echo $cmsConfig['storage'] === 'json' ? 'üü¢ '. t('Active'): '‚ö™ '. t('Inactive'); ?></span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Data Storage Path')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['json']['path']; ?></span>
        </div>
        <div class="d-flex justify-content-between border-bottom py-2">
            <span class="col-4 pe-2">{{t('Users Table')}}</span>
            <span class="col-8 text-left border-start ps-2"><?php echo $cmsConfig['json']['UsersTableName']; ?></span>
        </div>
    </div>
</div>

</div>


<script>
// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ –¥–ª—è CPU –∏ RAM
var ctxCpuRam = document.getElementById('resourceChartCpuRam').getContext('2d');
var chartCpuRam = new Chart(ctxCpuRam, {
    type: 'line',
    data: {
        labels: [],
        datasets: [
            {
                label: 'RAM (MB)',
                data: [],
                borderColor: 'blue',
                fill: false,
                yAxisID: 'y1',  // –ü—Ä–∏–≤—è–∑–∫–∞ –∫ –ø–µ—Ä–≤–æ–π –æ—Å–∏ Y (–¥–ª—è –ø–∞–º—è—Ç–∏)
                tension: 0.2 // –î–ª—è –º—è–≥–∫–æ—Å—Ç–∏ –∫—Ä–∏–≤–æ–π
            },
            {
                label: 'CPU (%)',
                data: [],
                borderColor: 'green',
                fill: false,
                yAxisID: 'y2',  // –ü—Ä–∏–≤—è–∑–∫–∞ –∫–æ –≤—Ç–æ—Ä–æ–π –æ—Å–∏ Y (–¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞)
                tension: 0.2 // –î–ª—è –º—è–≥–∫–æ—Å—Ç–∏ –∫—Ä–∏–≤–æ–π
            }
        ]
    },
    options: {
        responsive: true,
        animation: true,
        plugins: {
            legend: {
                display: false // –°–∫—Ä—ã–≤–∞–µ–º –ª–µ–≥–µ–Ω–¥—É
            }
        },
        scales: {
            x: {
                display: true,
                title: {
                    display: false,
                    text: 'Time'
                },
                grid: {
                    color: 'rgba(200, 200, 200, 0.1)' // –¶–≤–µ—Ç —Å–µ—Ç–∫–∏ –¥–ª—è –æ—Å–∏ X
                }
            },
            y1: {
                title: {
                    display: true,
                    text: 'RAM (MB)',
                    color: 'blue'
                },
                beginAtZero: true,
                ticks: {
                    color: 'blue'
                },
                grid: {
                    color: 'rgba(0, 0, 255, 0.2)' // –¶–≤–µ—Ç —Å–µ—Ç–∫–∏ –¥–ª—è –æ—Å–∏ Y1 (RAM)
                },
                position: 'left'
            },
            y2: {
                title: {
                    display: true,
                    text: 'CPU (%)',
                    color: 'green'
                },
                beginAtZero: true,
                ticks: {
                    color: 'green'
                },
                grid: {
                    color: 'rgba(0, 255, 0, 0.2)' // –¶–≤–µ—Ç —Å–µ—Ç–∫–∏ –¥–ª—è –æ—Å–∏ Y2 (CPU)
                },
                position: 'right'
            }
        }
    }
});

var timeCounter = 0;  // –°—á–µ—Ç—á–∏–∫ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –º–µ—Ç–æ–∫
var maxPoints = 60; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–µ
var isRequestPending = false; // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
var abortController = null; // –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–ø—Ä–æ—Å–∞

function updateStats() {
    if (isRequestPending) return; // –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –≤—ã—Ö–æ–¥–∏–º

    isRequestPending = true; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
    abortController = new AbortController(); // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π AbortController

    const timeoutId = setTimeout(() => {
        //console.log('–ü—Ä–æ—à–ª–æ 5 —Å–µ–∫—É–Ω–¥, –æ—Ç–º–µ–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å');
        abortController.abort(); // –û—Ç–º–µ–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å
        isRequestPending = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
        updateStats(); // –ü–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å
    }, 5000);

    const startTime = Date.now(); // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∑–∞–ø—Ä–æ—Å–∞

    fetch('stats.php', { signal: abortController.signal })
        .then(response => response.json())
        .then(data => {
            // –û–±–Ω–æ–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫ CPU –∏ RAM
            if (chartCpuRam.data.labels.length >= maxPoints) {
                chartCpuRam.data.labels.shift();
                chartCpuRam.data.datasets.forEach(dataset => dataset.data.shift());
            }
            chartCpuRam.data.labels.push(timeCounter);
            chartCpuRam.data.datasets[0].data.push(data.used_memory); // –ü–∞–º—è—Ç—å
            chartCpuRam.data.datasets[1].data.push(data.cpu); // CPU
            chartCpuRam.update('active'); // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ 'active'

            timeCounter = (timeCounter + 1) % maxPoints; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –≤—Ä–µ–º–µ–Ω–∏
        })
        .catch(error => {
            if (error.name === 'AbortError') {
                console.log('Request aborted due to timeout');
            } else {
                console.error('Error loading data'), error;
            }
        })
        .finally(() => {
            clearTimeout(timeoutId); // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä
            isRequestPending = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥

            const requestDuration = Date.now() - startTime;
            const delay = requestDuration < 1000 ? 1000 - requestDuration : 0;
            setTimeout(updateStats, delay); // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
        });
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
updateStats();

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
window.addEventListener('resize', function() {
    chartCpuRam.resize();
});
</script>

{{template includes/footer.htm}}