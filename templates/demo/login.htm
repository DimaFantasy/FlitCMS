{{template includes/header.htm}}

<h1 class="display-4 text-center mb-4">{{t('Login')}}</h1>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <form id="loginForm" action="index.php" method="POST" novalidate>
                <div class="mb-3">
                    <label for="email" class="form-label">{{t('Email')}}</label>
                    <input type="email" class="form-control" id="email" name="email" required>
                    <div id="emailError" class="alert alert-danger mt-2" style="display:none;" role="alert"></div>
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">{{t('Password')}}</label>
                    <input type="password" class="form-control" id="password" name="password" required>
                    <div id="passwordError" class="alert alert-danger mt-2" style="display:none;" role="alert"></div>
                </div>
                <button type="submit" class="btn btn-primary">{{t('Login')}}</button>
            </form>
            <p class="mt-3">{{t('No account?')}} <a href="?page=register.htm">{{t('Register')}}</a></p>
        </div>
    </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById('loginForm');

    // Добавляем обработчики для каждого поля
    form.querySelector('#email').addEventListener('input', validateEmail);
    form.querySelector('#password').addEventListener('input', validatePassword);

    // Добавляем обработчик для отправки формы
    form.addEventListener('submit', handleLogin);
});

function validateEmail() {
    const email = document.getElementById('email');
    const emailError = document.getElementById('emailError');
    emailError.style.display = 'none'; // Скрываем ошибку, если поле заполнено

    if (!email.value) {
        emailError.textContent = '{{t('Please fill in the Email field.')}}';
        emailError.style.display = 'block';
    } else if (!/\S+@\S+\.\S+/.test(email.value)) {
        emailError.textContent = '{{t('Please enter a valid Email.')}}';
        emailError.style.display = 'block';
    }
}

function validatePassword() {
    const password = document.getElementById('password');
    const passwordError = document.getElementById('passwordError');
    passwordError.style.display = 'none';

    if (!password.value) {
        passwordError.textContent = '{{t('Please fill in the Password field.')}}';
        passwordError.style.display = 'block';
    }
}

function handleLogin(e) {
    e.preventDefault(); // Останавливаем стандартное поведение формы

    const form = document.getElementById('loginForm');
    const formData = new FormData(form);
    formData.append('action', 'login');

    // Скрываем все ошибки перед отправкой
    document.getElementById('emailError').style.display = 'none';
    document.getElementById('passwordError').style.display = 'none';

    // Проверка полей перед отправкой
    validateEmail();
    validatePassword();

    const emailErrorVisible = document.getElementById('emailError').style.display === 'block';
    const passwordErrorVisible = document.getElementById('passwordError').style.display === 'block';

    if (emailErrorVisible || passwordErrorVisible) {
        return; // Если есть ошибки, не отправляем форму
    }

    // Отправляем запрос через fetch
    fetch('ajax.php', {
        method: 'POST',
        headers: {
            'X-CSRF-TOKEN': '<?= $_SESSION['csrf_token'] ?>' // Добавляем CSRF-токен
        },
        body: formData
    })
    .then(response => response.json()) // Получаем ответ в формате JSON
    .then(data => {
        if (data.success) {
            window.location.href = '?page=profile.htm'; // Перенаправление на профиль
        } else {
            alert(data.message); // Показываем сообщение об ошибке
        }
    })
    .catch(error => console.error('{{t('Request error:')}}', error)); // Логирование ошибок
}
</script>

{{template includes/footer.htm}}